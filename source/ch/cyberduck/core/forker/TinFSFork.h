/* DO NOT EDIT THIS FILE - it is machine generated */
/* Generated for class glguerin.io.imp.mac.macosx.TinFSFork */
/* Generated from TinFSFork.java*/

#ifndef _Included_glguerin_io_imp_mac_macosx_TinFSFork
#define _Included_glguerin_io_imp_mac_macosx_TinFSFork
#include <jni.h>
#ifdef __cplusplus
extern "C" {
#endif

/**
	 An instance of TinFSFork is a ForkRW representing a single open file-fork.
	<p>
	 This class assumes that another class (nominally MacOSXForker) has loaded
	 the necessary JNI library, and made the function-names in it available.
	 @author Gregory Guerin
*/

/*
 * Class:     glguerin_io_imp_mac_macosx_TinFSFork
 * Method:    flushForkX
 * Signature: (S)S
 */

/**
	JNI call to flush any buffers to disk.
*/

JNIEXPORT jshort JNICALL Java_glguerin_io_imp_mac_macosx_TinFSFork_flushForkX
	(JNIEnv *, jclass, jshort);

/*
 * Class:     glguerin_io_imp_mac_macosx_TinFSFork
 * Method:    forkClose
 * Signature: (S)I
 */

/**
	Close the given refNum.
*/

JNIEXPORT jint JNICALL Java_glguerin_io_imp_mac_macosx_TinFSFork_forkClose
	(JNIEnv *, jobject, jshort);

/*
 * Class:     glguerin_io_imp_mac_macosx_TinFSFork
 * Method:    forkLength
 * Signature: (S[J)I
 */

/**
	 Return the length of the given refNum's fork.
*/

JNIEXPORT jint JNICALL Java_glguerin_io_imp_mac_macosx_TinFSFork_forkLength
	(JNIEnv *, jobject, jshort, jlongArray);

/*
 * Class:     glguerin_io_imp_mac_macosx_TinFSFork
 * Method:    forkAt
 * Signature: (S[J)I
 */

/**
	 Return the current R/W position of the given refNum's fork.
*/

JNIEXPORT jint JNICALL Java_glguerin_io_imp_mac_macosx_TinFSFork_forkAt
	(JNIEnv *, jobject, jshort, jlongArray);

/*
 * Class:     glguerin_io_imp_mac_macosx_TinFSFork
 * Method:    forkSeek
 * Signature: (SJ)I
 */

/**
	 Seek to the given position in the given refNum's fork.
	 The position is always relative to the beginning of the file.
*/

JNIEXPORT jint JNICALL Java_glguerin_io_imp_mac_macosx_TinFSFork_forkSeek
	(JNIEnv *, jobject, jshort, jlong);

/*
 * Class:     glguerin_io_imp_mac_macosx_TinFSFork
 * Method:    forkRead
 * Signature: (S[BI[I)I
 */

/**
	 Read bytes from the current position in the given refNum's fork,
	 for a byte-count given by requestCount, placing the bytes in the buffer
	 beginning at offset 0.
	 Return the actual byte-count read in actualCount[ 0 ].
*/

JNIEXPORT jint JNICALL Java_glguerin_io_imp_mac_macosx_TinFSFork_forkRead
	(JNIEnv *, jobject, jshort, jbyteArray, jint, jintArray);

/*
 * Class:     glguerin_io_imp_mac_macosx_TinFSFork
 * Method:    forkSetLength
 * Signature: (SJ)I
 */

/**
	 Set the length of the given refNum's fork.
	 When extended, the new bytes in the fork may contain arbitrary
	 and possibly sensitive data from reused disk blocks.
*/

JNIEXPORT jint JNICALL Java_glguerin_io_imp_mac_macosx_TinFSFork_forkSetLength
	(JNIEnv *, jobject, jshort, jlong);

/*
 * Class:     glguerin_io_imp_mac_macosx_TinFSFork
 * Method:    forkWrite
 * Signature: (S[BI[I)I
 */

/**
	 Write bytes to the current position in the given refNum's fork,
	 for a byte-count given by requestCount, taking the bytes from the buffer
	 beginning at offset 0.
*/

JNIEXPORT jint JNICALL Java_glguerin_io_imp_mac_macosx_TinFSFork_forkWrite
	(JNIEnv *, jobject, jshort, jbyteArray, jint, jintArray);

#ifdef __cplusplus
}
#endif
#endif
