<!-- 
 *  Simple Ant (http://jakarta.apache.org/ant) build script for Cyberduck
 *
 *  $Header$
 *  $Revision$
 *  $Date$
 *
 *  Copyright (c) 2003 David Kocher. All rights reserved.
 *  http://icu.unizh.ch/~dkocher/
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  Bug fixes, suggestions and comments should be sent to:
 *  dkocher@cyberduck.ch
 -->

<project name="Cyberduck" default="usage" basedir=".">

	<property file="build.properties"/>

	<property name="debug" value="on" />

	<!-- set global properties for this build -->
	<property name="home" value="." />
	<property name="build" value="${home}/build" />
	<property name="config" value="${home}/config" />
	<property name="img" value="${home}/img" />
	<property name="lib" value="${home}/lib" />
	<property name="source" value="${home}/source" />
	<property name="classes" value="${build}/classes" />
	<property name="resources" value="${home}/resources" />
	<property name="doc" value="${home}/doc" />

	<path id="classpath">
	    <pathelement location="/System/Library/Java"/>
	    <fileset dir="${lib}">
		<include name="*.jar"/>
	    </fileset>
	</path>
		
	<!-- mac os x properties-->
	<property name="app.name" value="Cyberduck" />
	<property name="app.bundle" value="${build}/${app.name}.app" />
	<property name="app.contents" value="${app.bundle}/Contents" />
	<property name="app.resources" value="${app.contents}/Resources" />
	<property name="app.classes" value="${home}/${build}/intermediates/${app.name}.build/JavaClasses" />
	<property name="app.jar" value="${app.resources}/Java" />
	
	<target name="usage">
		<echo message="ant version:   ${ant.version}"/>
		<echo message="java version:  ${ant.java.version}"/>
		<echo message=""/>
		<echo message="   ---------------------------------------------------------------"/>
		<echo message="   project home:		${home}"/>
		<echo message="   project build:  	${build}"/>
		<echo message="   project source:	${source}"/>
		<echo message="   ---------------------------------------------------------------"/>
		<echo message=""/>
		<echo message=" available targets are:"/>
		<echo message=""/>
		<echo message="   all-modules --> build all modules"/>
		<echo message="   build-core --> build cyberduck-build-core"/>
		<echo message="   build-cocoa --> build build-cocoa gui classes"/>
		<echo message="   build-ssh-module --> build ssh client library"/>
		<echo message="   build-http-module --> build http client library"/>
		<echo message="   build-ftp-module --> build ftp client library"/>
		<echo message="   ---------------------------------------------------------------"/>
	</target>
	
	<target name="init" depends="manifest">
		<tstamp/>
		<echo message="Building ${app.name}..."/>
		<mkdir dir="${classes}" />
		<mkdir dir="${build}" />
	    <copy todir="${app.jar}">
		<fileset dir="${lib}">
		    <include name="*.jar" />
		</fileset>
	    </copy>
	</target>

	<target name="build-all-modules" depends="build-cocoa,build-core,build-ftp-module,build-http-module"></target>
	
	<target name="build-core" depends="init">
	    <mkdir dir="${classes}/core" />
            <javac 
            debug="${debug}"
            deprecation="on"
            srcdir="${source}" 
            destdir="${classes}/core"
            includes="ch/cyberduck/core/**">
            <classpath refid="classpath"/>
	    </javac>
	    
	    <jar jarfile="${build}/core.jar"
            update="yes"
            manifest="${build}/MANIFEST.MF">
            <fileset dir="${classes}/core">
                <include name="ch/cyberduck/core/**/*.class"/>
            </fileset>
	    </jar>

	    <copy todir="${app.jar}">
		<fileset dir="${build}">
		    <include name="core.jar" />
		</fileset>
	    </copy>
	</target>
	
	<target name="build-cocoa" depends="init">
	    <mkdir dir="${classes}/cocoa" />
	    <javac 
		debug="${debug}"
		deprecation="on"
		srcdir="${source}" 
		destdir="${classes}/cocoa"
		includes="ch/cyberduck/ui/cocoa/**">
		<classpath refid="classpath"/>
	    </javac>
	    
	    <jar jarfile="${build}/cocoa.jar"
		update="yes"
		manifest="${build}/MANIFEST.MF">
		<fileset dir="${classes}/cocoa/">
		    <include name="ch/cyberduck/ui/*.class"/>
		    <include name="ch/cyberduck/ui/cocoa/**/*.class"/>
		</fileset>
	    </jar>
	    
	    <copy todir="${app.jar}">
		<fileset dir="${build}">
		    <include name="cocoa.jar" />
		</fileset>
	    </copy>
	    
	    <replace
		dir="${app.contents}"
		token="*version*" 
		value="${cyberduck.version.major}.${cyberduck.version.minor}"
		summary="true">
		<include name="*.plist"/>
	    </replace>
	</target>

<!--
	<target name="ssh" depends="init">
	    <mkdir dir="${classes}/ssh" />
	    <javac 
		debug="${debug}"
		deprecation="on"
		srcdir="${source}" 
		destdir="${classes}/ssh"
		includes="com/sshtools/j2ssh/**">
		<classpath refid="classpath"/>
	    </javac>
	    
	    <jar jarfile="${build}/ssh.jar"
		update="yes">
		<fileset dir="${classes}/ssh">
		    <include name="com/sshtools/j2ssh/**/*.class"/>
		</fileset>
	    </jar>

	    <copy todir="${app.jar}">
		<fileset dir="${build}">
		    <include name="ssh.jar" />
		</fileset>
	    </copy>
	</target>
-->

	<target name="build-ftp-module" depends="init">
	    <mkdir dir="${classes}/ftp" />
	    <javac 
		debug="${debug}"
		deprecation="on"
		srcdir="${source}" 
		destdir="${classes}/ftp"
		includes="com/enterprisedt/**">
		<classpath refid="classpath"/>
	    </javac>
	    
	    <jar jarfile="${build}/ftp.jar"
		update="yes"
		manifest="${build}/MANIFEST.MF">
		<fileset dir="${classes}/ftp">
		    <include name="com/enterprisedt/**/*.class"/>
		</fileset>
	    </jar>

	    <copy todir="${app.jar}">
		<fileset dir="${build}">
		    <include name="ftp.jar" />
		</fileset>
	    </copy>
	</target>
	
	<target name="build-http-module" depends="init">
	    <mkdir dir="${classes}/http" />
	    <javac 
		debug="${debug}"
		deprecation="on"
		srcdir="${source}" 
		destdir="${classes}/http"
		includes="org/apache/commons/httpclient/**">
		<classpath refid="classpath"/>
	    </javac>
	    
	    <jar jarfile="${build}/http.jar"
		update="yes">
		<fileset dir="${classes}/http">
		    <include name="org/apache/commons/httpclient/**/*.class"/>
		</fileset>
	    </jar>

	    <copy todir="${app.jar}">
		<fileset dir="${build}">
		    <include name="http.jar" />
		</fileset>
	    </copy>
	</target>

	<target name="doc" depends="init">
		<mkdir dir="${doc}" />
		<javadoc packagenames="ch.cyberduck.*"
		           sourcepath="${source}"
		           destdir="${doc}"
		           author="true"
		           version="true"
		           use="true"
		           windowtitle="${app.name} API"
		           doctitle="${app.name}"
		           bottom="Copyright (c) 2003 David Kocher. Enjoy ${app.name}!">
		    <classpath refid="classpath"/>
		  </javadoc>
	</target>
	
	<target name="clean">
		<delete dir="${classes}" />
		<delete file="${build}/cocoa.jar" />
		<delete file="${build}/swing.jar" />
		<delete file="${build}/core.jar" />
		<delete file="${build}/ftp.jar" />
		<delete file="${build}/http.jar" />
	</target>
	
	<target name="manifest">
	  <manifest file="${build}/MANIFEST.MF">
		<attribute name="Built-By" value="${user.name}"/>
		    <attribute name="Specification-Title" value="Cyberduck"/>
		    <attribute name="Specification-Version" value="${cyberduck.version.major}.${cyberduck.version.minor}"/>
		    <attribute name="Specification-Vendor" value="David Kocher"/>
		    <attribute name="Implementation-Version" value="${cyberduck.version.major}.${cyberduck.version.minor}"/> 
	    </manifest>
	</target>
</project>

